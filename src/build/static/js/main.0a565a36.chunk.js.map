{"version":3,"sources":["components/Book.js","components/DisplayBooks.js","components/TimeFormat.js","components/sendPost.js","components/AddBooks.js","components/AddEntry.js","components/Profile.js","components/Header.js","components/Home.js","components/StartScreen.js","components/PublicPage.js","components/App.js","index.js"],"names":["Book","book","this","props","addEntry","num","title","author","pagesRead","pagesTotal","rating","numEntries","className","toString","includes","toFixed","type","onClick","switch","removeBook","Component","DisplayBooks","bookshelf","length","map","i","key","TimeFormatSub","sTime","eTime","sh","slice","sm","eh","em","subHour","parseInt","subMin","sendPost","post","rgb","r","Math","random","g","b","axios","then","res","console","log","catch","err","AddBooks","state","showForm","bookNotes","errors","publicPost","doChange","bind","addBook","toggleCheckbox","e","preventDefault","dateNow","moment","format","timeForReading","totTime","push","isNaN","isValid","isEmpty","errorCatch","note","start","end","nickname","dateOfPost","setState","document","getElementById","checked","target","value","name","id","noValidate","onSubmit","placeholder","onChange","element","cols","rows","error","AddEntry","startPage","changeBookLog","tempNote","unshift","Profile","entry","date","parse","timeRead","closeBar","style","display","Header","LogedIn","pageName","newNavPage","Logout","Home","toggleMain","pageId","newEntryBook","profileBook","toggleAdditional","toggleProfile","postNewShelf","window","location","get","data","Shelf","tempShelf","ogBook","newBook","without","homeState","info","shelf","put","StartScreen","SEmail","SPassword","SNick","LEmail","LPassword","submitNew","submitLogin","userData","email","password","checkUser","setId","token","PublicPage","postLog","onLike","reverse","_id","templog","likes","index","indexOf","splice","forceUpdate","background","removePost","App","navigate","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.0a565a36.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../css/App.css';\r\nimport { FaPlus } from 'react-icons/fa';\r\nimport { FaTrash } from 'react-icons/fa'\r\n\r\nclass Book extends Component {\r\n\r\n\r\n\r\n    addEntry(book) {\r\n        this.props.addEntry(book);\r\n    }\r\n\r\n    render() {\r\n        // const title = this.props.book.title\r\n        // console.log(this.props.book)\r\n\r\n        const { title, author, pagesRead, pagesTotal, rating, numEntries } = this.props.book;\r\n\r\n        return (\r\n            <div className=\"col-md-4 mb-4\">\r\n                <div className=\"card bg-dark\">\r\n                    <div className=\"th1 form-row align-items-center justify-content-center\">\r\n                        <h4 className=\"text-center\">{title}</h4>\r\n                    </div>\r\n\r\n                    <div className=\"form-row\">\r\n                        <label className=\"col-md-6 text-md-right\">Author :</label>\r\n                        <label className=\"col-md-6 text-md-center\">{author}</label>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <label className=\"col-md-6 text-md-right\">Pages Read:</label>\r\n                        <label className=\"col-md-6\">{pagesRead}</label>\r\n                        <label className=\"col-md-6 text-md-right\">Pages Total:</label>\r\n                        <label className=\"col-md-6\">{pagesTotal}</label>\r\n\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <label className=\"col-md-6 text-md-right\">User Rating:</label>\r\n                        <label className=\"col-md-6\">{decimals(rating / numEntries)}</label>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col text-md-center font-weight-bold\">\r\n                            {pagesTotal > pagesRead && pagesRead > pagesTotal / 2 ?\r\n                                <label className=\"text-info\">Only {pagesTotal - pagesRead} pages left</label> :\r\n                                pagesTotal > pagesRead ?\r\n                                    <label className=\"text-info\">{pagesTotal - pagesRead} pages left</label> :\r\n                                    <label className=\"text-success\">This book is complete!</label>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group form-row mb-1\">\r\n                        <div className=\"offset-md-1 col-md-5\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn buttonsecondary text-light btn-block d-block ml-auto\"\r\n                                onClick={() => { this.props.switch(\"profile\", this.props.book) }}\r\n                            >\r\n                                Profile\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"offset-md-0 col-md-2\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn buttonsecondary text-light btn-block d-block ml-auto\"\r\n                                onClick={() => { this.props.switch(\"entry\", this.props.book) }}\r\n                            >\r\n                                <FaPlus />\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"offset-md-1 col-md-2\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger btn-block d-block ml-auto\"\r\n                                onClick={() => { this.props.removeBook(this.props.book) }}\r\n                            >\r\n                                <FaTrash />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction decimals(num) {\r\n    let stringN = num.toString()\r\n    return (stringN.includes('.') ? num.toFixed(1) : num)\r\n}\r\n\r\nexport default Book\r\n","import React, { Component } from 'react';\r\nimport '../css/App.css';\r\nimport Book from './Book.js'\r\n\r\nclass DisplayBooks extends Component {\r\n\r\n    // addEntry(book) {\r\n    //     console.log(book)\r\n    //     //this.props.addEntry3(book);\r\n    // }\r\n\r\n    render() {\r\n        //console.log(this.props)\r\n        return (\r\n            <div className=\"card bg-dark mb-5 mt-4\">\r\n                <div className=\"card-header\">\r\n                    <h4>Book Shelf</h4>\r\n                </div>\r\n                {this.props.bookshelf.length > 0 ?\r\n                    <div className=\"container card-body\">\r\n                        <div className=\"row\">\r\n\r\n                            {this.props.bookshelf.map((book, i) => (\r\n                                <Book\r\n                                    book={book}\r\n                                    key={i}\r\n                                    addEntry={this.props.addEntry}\r\n                                    removeBook={this.props.removeBook}\r\n                                    switch={this.props.switch}\r\n                                />\r\n\r\n                            ))}\r\n                        </div>\r\n                    </div> : <h5 className=\"align-self-center p-4\">You dont have any books on your shelf yet! Click Add New Book Entry to start your personal library!</h5>\r\n\r\n\r\n                }\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default DisplayBooks","\r\n\r\nexport default function TimeFormatSub(sTime, eTime) {\r\n    sTime = sTime.toString();\r\n    eTime = eTime.toString();\r\n\r\n    let sh = sTime.slice(0, 2)\r\n    let sm = sTime.slice(3, 5)\r\n    let eh = eTime.slice(0, 2)\r\n    let em = eTime.slice(3, 5)\r\n\r\n    let subHour = parseInt(eh) - parseInt(sh)\r\n    if (subHour < 0) {\r\n        subHour = 24 + subHour\r\n    }\r\n    let subMin = parseInt(em) - parseInt(sm)\r\n    if (subMin < 0) {\r\n        subMin = 60 + subMin\r\n        subHour -= 1\r\n    }\r\n\r\n    return (subHour * 60 + subMin)\r\n\r\n}","import axios from 'axios'\r\n\r\nexport function sendPost(post) {\r\n    post.rgb = {\r\n        r: Math.random() * 155 + 100,\r\n        g: Math.random() * 155 + 100,\r\n        b: Math.random() * 155 + 100\r\n    }\r\n    axios.post('http://storytime-matt.herokuapp.com/home/public', post)\r\n        .then(res => {\r\n            console.log(res)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n}","import React, { Component } from 'react';\r\nimport '../css/App.css';\r\nimport { FaPlus } from 'react-icons/fa';\r\nimport moment from 'moment';\r\nimport TimeFormatSub from './TimeFormat';\r\nimport { isEmpty } from 'lodash';\r\nimport { sendPost } from './sendPost';\r\n\r\n\r\nclass AddBooks extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showForm: false,\r\n            title: '',\r\n            author: '',\r\n            pagesRead: '',\r\n            pagesTotal: '',\r\n            bookNotes: '',\r\n            sTime: '',\r\n            eTime: '',\r\n            rating: 5,\r\n            numEntries: 1,\r\n            errors: [],\r\n            publicPost: false\r\n        }\r\n        this.doChange = this.doChange.bind(this);\r\n        this.addBook = this.addBook.bind(this);\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n\r\n    }\r\n\r\n    addBook(e) {\r\n        e.preventDefault();\r\n        let dateNow = moment().format('YYYY-MM-DD hh:mma').toString()\r\n        let timeForReading = TimeFormatSub(this.state.sTime, this.state.eTime);\r\n        let Book = {\r\n            title: this.state.title,\r\n            author: this.state.author,\r\n            pagesRead: parseInt(this.state.pagesRead),\r\n            pagesTotal: parseInt(this.state.pagesTotal),\r\n            bookNotes: [{\r\n                \"note\": this.state.bookNotes,\r\n                \"date\": dateNow,\r\n                \"start\": 0,\r\n                \"end\": this.state.pagesRead,\r\n                \"timeRead\": timeForReading\r\n            }],\r\n            rating: parseInt(this.state.rating),\r\n            numEntries: 1,\r\n            totTime: timeForReading\r\n        }\r\n\r\n        const { errors, isValid } = errorCatch(Book, this.state.sTime, this.state.eTime);\r\n\r\n        if (!isValid) {\r\n            this.setState({\r\n                errors: errors\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (this.state.publicPost) {\r\n            let post = {\r\n                title: this.state.title,\r\n                author: this.state.author,\r\n                note: this.state.bookNotes,\r\n                start: 0,\r\n                end: parseInt(this.state.pagesRead),\r\n                rating: parseInt(this.state.rating),\r\n                nickname: this.props.nickname,\r\n                dateOfPost: moment().format('YYYY-MM-DD hh:mma').toString()\r\n            }\r\n            sendPost(post);\r\n        }\r\n        this.props.addBook(Book)\r\n        this.setState({\r\n            showForm: false,\r\n            title: '',\r\n            author: '',\r\n            pagesRead: '',\r\n            pagesTotal: '',\r\n            bookNotes: '',\r\n            eTime: '',\r\n            sTime: '',\r\n            rating: 5,\r\n            errors: [],\r\n            publicPost: false\r\n        });\r\n        document.getElementById('publicCheck').checked = false;\r\n    }\r\n\r\n    doChange(e) {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        //console.log(document.getElementsByName('publicPage').value)\r\n\r\n    }\r\n    toggleCheckbox() {\r\n        this.setState({\r\n            publicPost: !this.state.publicPost\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const elements = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n        return (\r\n            <div className=\"card bg-dark mt-4\">\r\n                <div className=\"card-header buttonsecondary\"\r\n                    onClick={(e) => this.setState({\r\n                        showForm: !this.state.showForm\r\n                    })}\r\n                >\r\n                    <h5 className=\"text-light\">Add New Book <FaPlus /> </h5>\r\n                </div>\r\n                <div className={'card-body' + (this.state.showForm ? '' : ' d-none')}>\r\n                    <form id=\"aptForm\" noValidate onSubmit={this.addBook}>\r\n                        <div className=\"form-row py-2\">\r\n\r\n                            <label className=\"col-2 text-white-50 align-self-center\">Book Title:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"col-10 form-control\"\r\n                                name=\"title\"\r\n                                placeholder=\"Book Title\"\r\n                                value={this.state.title}\r\n                                onChange={this.doChange}\r\n                            >\r\n\r\n                            </input>\r\n\r\n                        </div>\r\n                        <div className=\"form-row py-2\">\r\n\r\n                            <label className=\"col-2 text-white\">Author:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"col-10 form-control\"\r\n                                name=\"author\"\r\n                                placeholder=\"Author Name\"\r\n                                value={this.state.author}\r\n                                onChange={this.doChange}\r\n                            >\r\n\r\n                            </input>\r\n                        </div>\r\n                        <div className=\"form-row py-2\">\r\n\r\n                            <label className=\"col-2 text-white\">Start Time:</label>\r\n                            <input\r\n                                type=\"time\"\r\n                                className=\"col-3 form-control\"\r\n                                name=\"sTime\"\r\n                                value={this.state.sTime}\r\n                                onChange={this.doChange}\r\n                            >\r\n\r\n                            </input>\r\n                            <label className=\"col-2 offset-2 text-white\">End Time:</label>\r\n                            <input\r\n                                type=\"time\"\r\n                                className=\"col-3 form-control\"\r\n                                name=\"eTime\"\r\n                                value={this.state.eTime}\r\n                                onChange={this.doChange}\r\n                            >\r\n\r\n                            </input>\r\n\r\n                        </div>\r\n                        <div className=\"form-row py-2\">\r\n\r\n                            <label className=\"col-2 text-white\">Pages Read:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"col-3 form-control\"\r\n                                name=\"pagesRead\"\r\n                                placeholder=\"Pages Read\"\r\n                                value={this.state.pagesRead}\r\n                                onChange={this.doChange}\r\n                            >\r\n\r\n                            </input>\r\n                            <label className=\"col-2 offset-2 text-white\">Pages Total:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"col-3 form-control\"\r\n                                name=\"pagesTotal\"\r\n                                placeholder=\"Pages Total\"\r\n                                value={this.state.pagesTotal}\r\n                                onChange={this.doChange}\r\n                            >\r\n\r\n                            </input>\r\n\r\n                        </div>\r\n                        <div className=\"row py-2\">\r\n                            <div className=\"col-2\">\r\n                                <label className=\"text-white\">Rate what you read:</label>\r\n\r\n                            </div>\r\n\r\n                            {elements.map((element, i) => (\r\n                                <span className=\"col-1\" key={i}>\r\n                                    <button className={\"btn buttonsecondary text-light btn-block d-block ml-auto rating\"} type=\"button\"\r\n                                        onClick={(e) => this.setState({\r\n                                            rating: element\r\n                                        })}\r\n                                    >{element}</button>\r\n                                </span>\r\n                            ))}\r\n\r\n                            {/* <ButtonLine /> */}\r\n\r\n                        </div>\r\n                        <div className=\"row py-2\">\r\n                            <div className=\"col-2\">\r\n                                <label className=\"text-white\">Notes:</label>\r\n                            </div>\r\n                            <div className=\"col-10\">\r\n                                <textarea\r\n                                    className=\"form-control\"\r\n                                    name=\"bookNotes\"\r\n                                    placeholder=\"This is the place to put any and all thoughts you have about what you just read. Favourite line? Worst character? Most shocking plot twist? Your notes will end up on the novels profile page!\"\r\n                                    cols=\"60\"\r\n                                    rows=\"3\"\r\n                                    value={this.state.bookNotes}\r\n                                    onChange={this.doChange}\r\n                                >\r\n\r\n                                </textarea>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                {this.state.errors.map((error, key) => {\r\n                                    return (\r\n                                        <div className=\"form-row justify-content-center\" key={key}>\r\n                                            <label className=\"text-danger text-center\">{error}</label>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <input className=\"offset-8\"\r\n                                        type=\"checkbox\"\r\n                                        id=\"publicCheck\"\r\n                                        onChange={this.toggleCheckbox}\r\n                                    // onChange={this.doChange}\r\n                                    ></input>\r\n                                    <label className=\"mx-2 my-2\">Make Post Public</label>\r\n                                    <button className=\"btn btn-danger offset-1\" type=\"submit\">Submit</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nfunction errorCatch(Book, sTime, eTime) {\r\n    let errors = [];\r\n\r\n    if (Book.title === '') {\r\n        errors.push('title field is required');\r\n    }\r\n    if (Book.author === '') {\r\n        errors.push('author field is required')\r\n    }\r\n    if (Book.pagesRead === '') {\r\n        errors.push('Pages Read field is required')\r\n    } else if (isNaN(parseInt(Book.pagesRead))) {\r\n        errors.push('Pages Read field must be a Number')\r\n    }\r\n    if (Book.pagesTotal === '') {\r\n        errors.push('Pages Total field is required')\r\n    } else if (isNaN(parseInt(Book.pagesTotal))) {\r\n        errors.push('Pages Total field must be a Number')\r\n    }\r\n    if (sTime === '') {\r\n        errors.push('Start Time field is required')\r\n    }\r\n    if (eTime === '') {\r\n        errors.push('End Time field is required')\r\n    }\r\n    if (Book.pagesRead > Book.pagesTotal) {\r\n        errors.push('Cannot have read more pages than in the book total')\r\n    }\r\n\r\n    let isValid = isEmpty(errors);\r\n    return {\r\n        errors,\r\n        isValid\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default AddBooks","import React, { Component } from 'react';\r\nimport '../css/App.css';\r\nimport { FaTimes } from 'react-icons/fa'\r\nimport moment from 'moment'\r\nimport { isEmpty } from 'lodash';\r\nimport TimeFormatSub from './TimeFormat'\r\nimport { sendPost } from './sendPost'\r\n//import { without } from 'lodash';\r\n\r\nclass AddEntry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pagesRead: '',\r\n            rating: this.props.book.rating,\r\n            note: '',\r\n            startPage: this.props.book.pagesRead,\r\n            sTime: '',\r\n            eTime: '',\r\n            errors: [],\r\n            publicPost: false\r\n        }\r\n        this.doChange = this.doChange.bind(this);\r\n        this.changeBookLog = this.changeBookLog.bind(this);\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n    }\r\n\r\n\r\n\r\n    changeBookLog(e) {\r\n        e.preventDefault();\r\n        let dateNow = moment().format('YYYY-MM-DD hh:mma').toString()\r\n        let timeForReading = TimeFormatSub(this.state.sTime, this.state.eTime);\r\n        let tempNote = [...this.props.book.bookNotes];\r\n        tempNote.unshift({\r\n            \"note\": this.state.bookNotes,\r\n            \"date\": dateNow,\r\n            \"start\": this.state.startPage,\r\n            \"end\": parseInt(this.state.pagesRead) + parseInt(this.state.startPage),\r\n            \"timeRead\": timeForReading\r\n        });\r\n        let Book = {\r\n            title: this.props.book.title,\r\n            author: this.props.book.author,\r\n            pagesRead: parseInt(this.props.book.pagesRead) + parseInt(this.state.pagesRead),\r\n            pagesTotal: this.props.book.pagesTotal,\r\n            bookNotes: tempNote,\r\n            numEntries: this.props.book.numEntries + 1,\r\n            rating: this.state.rating + this.props.book.rating,\r\n            totTime: this.props.book.totTime + timeForReading\r\n        };\r\n        const { errors, isValid } = errorCatch(Book, this.state.sTime, this.state.eTime);\r\n\r\n        if (!isValid) {\r\n            this.setState({\r\n                errors: errors\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (this.state.publicPost) {\r\n            let post = {\r\n                title: this.props.book.title,\r\n                author: this.props.book.author,\r\n                note: this.state.bookNotes,\r\n                start: this.state.startPage,\r\n                end: parseInt(this.props.book.pagesRead) + parseInt(this.state.pagesRead),\r\n                rating: parseInt(this.state.rating),\r\n                nickname: this.props.nickname,\r\n                dateOfPost: dateNow\r\n            }\r\n            sendPost(post);\r\n        }\r\n        this.props.changeBookLog(this.props.book, Book);\r\n        this.setState({\r\n            pagesRead: '',\r\n            rating: '',\r\n            bookNotes: '',\r\n            startPage: '',\r\n            sTime: '',\r\n            eTime: ''\r\n        });\r\n        this.props.switch();\r\n        document.getElementById('publicCheck').checked = false\r\n\r\n    }\r\n\r\n    doChange(e) {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    toggleCheckbox() {\r\n        this.setState({\r\n            publicPost: !this.state.publicPost\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const elements = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n        return (\r\n            <div className=\"card bg-dark mt-4\">\r\n                <div className=\"card-header buttonsecondary\">\r\n                    <div className=\"form-row\">\r\n                        <h5 className=\"text-light col-11\">Reading Entry for {this.props.book.title} </h5>\r\n                        <button className=\"btn btn-danger col-1\" onClick={() => { this.props.switch() }}><FaTimes /></button>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={'card-body'}>\r\n                    <form id=\"aptForm\" noValidate onSubmit={this.changeBookLog}>\r\n                        <div className=\"form-row py-2\">\r\n\r\n                            <label className=\"col-2 text-white-50 align-self-center\">Book Title:</label>\r\n                            <label><b>{this.props.book.title}</b></label>\r\n\r\n                        </div>\r\n                        <div className=\"form-row py-2\">\r\n\r\n                            <label className=\"col-2 text-white\">Author:</label>\r\n                            <label><b>{this.props.book.author}</b></label>\r\n                        </div>\r\n                        <div className=\"form-row py-2\">\r\n\r\n                            <label className=\"col-2 text-white\">Start Time:</label>\r\n                            <input\r\n                                type=\"time\"\r\n                                className=\"col-3 form-control\"\r\n                                name=\"sTime\"\r\n                                value={this.state.sTime}\r\n                                onChange={this.doChange}\r\n                            >\r\n\r\n                            </input>\r\n                            <label className=\"col-2 offset-2 text-white\">End Time:</label>\r\n                            <input\r\n                                type=\"time\"\r\n                                className=\"col-3 form-control\"\r\n                                name=\"eTime\"\r\n                                value={this.state.eTime}\r\n                                onChange={this.doChange}\r\n                            >\r\n\r\n                            </input>\r\n\r\n                        </div>\r\n                        <div className=\"form-row py-2\">\r\n\r\n                            <label className=\"col-2 text-white\">Pages Read:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"col-3 form-control\"\r\n                                name=\"pagesRead\"\r\n                                placeholder=\"Pages Read\"\r\n                                value={this.state.pagesRead}\r\n                                onChange={this.doChange}\r\n                            >\r\n\r\n                            </input>\r\n                            <label className=\"col-2 offset-2 text-white\">Pages Total:</label>\r\n                            <label>{this.props.book.pagesTotal}</label>\r\n\r\n                        </div>\r\n                        <div className=\"row py-2\">\r\n                            <div className=\"col-2\">\r\n                                <label className=\"text-white\">Rate what you read:</label>\r\n\r\n                            </div>\r\n\r\n                            {elements.map((element, i) => (\r\n                                <span className=\"col-1\" key={i}>\r\n                                    <button className={\"btn buttonsecondary text-light btn-block d-block ml-auto rating\"} type=\"button\"\r\n                                        onClick={(e) => this.setState({\r\n                                            rating: element\r\n                                        })}\r\n                                    >{element}</button>\r\n                                </span>\r\n                            ))}\r\n\r\n                            {/* <ButtonLine /> */}\r\n\r\n                        </div>\r\n                        <div className=\"row py-2\">\r\n                            <div className=\"col-2\">\r\n                                <label className=\"text-white\">Notes:</label>\r\n                            </div>\r\n                            <div className=\"col-10\">\r\n                                <textarea\r\n                                    className=\"form-control\"\r\n                                    name=\"bookNotes\"\r\n                                    placeholder=\"This is the place to put any and all thoughts you have about what you just read. Favourite line? Worst character? Most shocking plot twist? Your notes will end up on the novels profile page!\"\r\n                                    cols=\"60\"\r\n                                    rows=\"3\"\r\n                                    value={this.state.bookNotes}\r\n                                    onChange={this.doChange}\r\n                                >\r\n\r\n                                </textarea>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                {this.state.errors.map((error, key) => {\r\n                                    return (\r\n                                        <div className=\"row\" key={key}>\r\n                                            <label className=\"text-danger\">{error}</label>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <input className=\"offset-8\"\r\n                                        type=\"checkbox\"\r\n                                        id=\"publicCheck\"\r\n                                        onChange={this.toggleCheckbox}\r\n                                    // onChange={this.doChange}\r\n                                    ></input>\r\n                                    <label className=\"mx-2 my-2\">Make Post Public</label>\r\n                                    <button className=\"btn btn-danger offset-1\" type=\"submit\">Submit</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nfunction errorCatch(Book, sTime, eTime) {\r\n    let errors = [];\r\n\r\n    if (Book.pagesRead === '') {\r\n        errors.push('Pages Read field is required')\r\n    } else if (isNaN(parseInt(Book.pagesRead))) {\r\n        errors.push('Pages Read field must be a Number')\r\n    }\r\n    if (sTime === '') {\r\n        errors.push('Start Time field is required')\r\n    }\r\n    if (eTime === '') {\r\n        errors.push('End Time field is required')\r\n    }\r\n    if (Book.pagesRead > Book.pagesTotal) {\r\n        errors.push('Cannot have read more pages than in the book total')\r\n    }\r\n\r\n    let isValid = isEmpty(errors);\r\n    return {\r\n        errors,\r\n        isValid\r\n    }\r\n\r\n}\r\n\r\nexport default AddEntry;","import React, { Component } from 'react';\r\nimport '../css/App.css';\r\nimport { FaTimes } from 'react-icons/fa'\r\nimport Moment from 'react-moment';\r\n\r\nclass Profile extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <div className=\"row m-2\">\r\n                    <div className=\"col-11\">\r\n                        <h3 className=\"text-center\">{this.props.book.title} Profile Page</h3>\r\n                    </div>\r\n                    <div className=\"col-1\">\r\n                        <div className=\"float-right\">\r\n                            <button className=\"btn btn-danger\"\r\n                                onClick={this.props.switch}\r\n                            ><FaTimes /></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                {this.props.book.bookNotes.map((entry, key) => (\r\n                    <div className=\"row\" key={key}>\r\n                        {!entry.note ? '' :\r\n                            <div className=\"col m-3\">\r\n                                <div className=\"card bg-dark profile\">\r\n                                    <div className=\"card-header\">\r\n                                        <label>On\r\n                                    <b><Moment\r\n                                                date={entry.date}\r\n                                                parse=\"YYYY-MM-DD hh:mma\"\r\n                                                format='[ ]MMM. D, YYYY [at] h:mm A z[ ]'\r\n                                            /></b>\r\n                                     you posted after reading <b>{entry.end - entry.start}</b> pages of <b>{this.props.book.title}</b></label>\r\n                                    </div>\r\n                                    <div className=\"card-body profile_body\">\r\n                                        <div className=\"row\">\r\n                                            <label className=\"float-left mx-3\">{entry.note}</label>\r\n                                        </div>\r\n\r\n                                        <div className=\"row mt-5\">\r\n                                            <div className=\"col-4\">\r\n                                                <label className=\"\">Read for <b>{entry.timeRead}</b> {entry.timeRead === 1 ? \"minute\" : \"minutes\"}</label>\r\n                                            </div>\r\n                                            <div className=\"vl\"></div>\r\n                                            <div className=\"col-4\">\r\n                                                <label>From <b>{entry.start === 0 ? \"The Beginning\" : \"Page \" + entry.start}</b></label>\r\n                                            </div>\r\n                                            <div className=\"vl\"></div>\r\n                                            <div className=\"col-4 align-items-end\">\r\n                                                <label>To <b>Page {entry.end}</b></label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>}\r\n                    </div>\r\n                ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport { FaBars } from 'react-icons/fa'\r\n\r\n\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"container text-dark\">\r\n\r\n                <div className=\"row\">\r\n                    {this.props.LogedIn ?\r\n                        <div className=\"col-3\">\r\n                            <button\r\n                                className=\"navbutt mt-5 mx-3 btn btn-dark float-left\"\r\n                                onClick={() => openBar()}\r\n                            ><FaBars /></button>\r\n                            <ul id=\"mySidebar\" className=\"navbar\">\r\n                                <button\r\n                                    onClick={() => closeBar()}\r\n                                    className=\"mt-5 btn btn-dark\"\r\n                                ><FaBars /></button>\r\n                                <li>\r\n                                    <label onClick={() => {\r\n                                        this.props.pageName === 'Home' ? closeBar() : this.props.newNavPage('Home')\r\n                                    }}> Home </label>\r\n                                </li>\r\n                                <li>\r\n                                    <label onClick={() => {\r\n                                        this.props.pageName === 'Public' ? closeBar() : this.props.newNavPage('Public')\r\n                                    }}> Public </label>\r\n                                </li>\r\n                            </ul>\r\n                        </div> : ''}\r\n                    <div className={'col-6 py-3' + (this.props.LogedIn ? '' : ' text-left')} >\r\n                        <h1>StoryTime</h1>\r\n                        <h5>Read. Learn. Grow.</h5>\r\n                    </div>\r\n                    {this.props.LogedIn ?\r\n                        <div className=\"col-3 pt-5\">\r\n                            <div className=\"\">\r\n                                <label className=\"mx-2 font-weight-bold\">Welcome {this.props.nickname}!</label>\r\n                                <button className=\"btn btn-dark mx-2\" onClick={this.props.Logout}>Logout</button>\r\n                            </div>\r\n\r\n                        </div> : ''\r\n\r\n                    }\r\n\r\n                </div>\r\n\r\n\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nfunction closeBar() {\r\n    document.getElementById(\"mySidebar\").style.display = \"none\";\r\n    //document.getElementById(\"homer\").style.marginLeft = 0;\r\n}\r\nfunction openBar() {\r\n    document.getElementById(\"mySidebar\").style.display = \"table-row\";\r\n    //document.getElementById(\"homer\").style.marginLeft = 300;\r\n}\r\n\r\n\r\nexport default Header","import React, { Component } from 'react';\nimport '../css/App.css';\nimport DisplayBooks from './DisplayBooks.js'\nimport AddBooks from './AddBooks.js'\nimport AddEntry from './AddEntry.js'\nimport Profile from './Profile.js'\nimport { without } from 'lodash';\nimport Header from './Header'\n\nimport axios from 'axios';\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleMain: true,\n      pageId: this.props.pageId || '',\n      newEntryBook: '',\n      profileBook: '',\n      toggleAdditional: false,\n      toggleProfile: false,\n      bookshelf: [],\n      nickname: '',\n      LogedIn: false\n    }\n\n    this.addBook = this.addBook.bind(this);\n\n    this.changeBookLog = this.changeBookLog.bind(this);\n    this.removeBook = this.removeBook.bind(this);\n    this.postNewShelf = this.postNewShelf.bind(this);\n    this.switch = this.switch.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.pageId === '') {\n      window.location = '/'\n    }\n    //console.log(moment().format('YYYY-MM-DD hh:mm').toString())\n\n    axios.get(`http://storytime-matt.herokuapp.com/home/${this.state.pageId}`)\n      .then(res => {\n        //console.log(res.data);\n        this.setState({\n          bookshelf: res.data.Shelf,\n          nickname: res.data.nickname\n        })\n      }).catch((error) => {\n        console.log(error);\n      })\n    this.setState({\n      LogedIn: true\n    })\n  }\n\n  addBook(Book) {\n    let tempShelf = this.state.bookshelf;\n    tempShelf.unshift(Book);\n\n    this.setState({\n      bookshelf: tempShelf\n    })\n    this.postNewShelf(tempShelf);\n  }\n\n  changeBookLog(ogBook, newBook) {\n    let tempShelf = this.state.bookshelf;\n    tempShelf = without(tempShelf, ogBook);\n    tempShelf.unshift(newBook);\n    this.setState({\n      bookshelf: tempShelf\n    })\n    this.postNewShelf(tempShelf);\n  }\n\n  removeBook(book) {\n    let tempShelf = this.state.bookshelf;\n    tempShelf = without(tempShelf, book);\n    this.setState({\n      bookshelf: tempShelf\n    })\n    this.postNewShelf(tempShelf);\n  }\n\n  switch(homeState, info) {\n    if (this.state.toggleMain === false) {\n      this.setState({\n        toggleMain: true,\n        toggleAdditional: false,\n        toggleProfile: false\n      })\n    } else if (homeState === 'profile') {\n      this.setState({\n        toggleMain: false,\n        toggleProfile: true,\n        profileBook: info\n      })\n    } else (\n      this.setState({\n        toggleMain: false,\n        toggleAdditional: true,\n        newEntryBook: info\n      })\n    )\n  }\n\n  postNewShelf(shelf) {\n    axios.put(`http://storytime-matt.herokuapp.com/home/change/${this.state.pageId}`, shelf)\n      .then(res => {\n        console.log(res)\n      }).catch(err => {\n        console.log(err)\n      });\n  }\n  render() {\n    return (\n      <div>\n        <Header\n          LogedIn={this.state.LogedIn}\n          nickname={this.state.nickname}\n          Logout={this.props.Logout}\n          pageName={\"Home\"}\n          newNavPage={this.props.newNavPage}\n        />\n\n        <main className=\"bg-dark text-light base\" >\n\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"container\">\n                  <div>\n\n                    {this.state.toggleAdditional ? <AddEntry\n                      book={this.state.newEntryBook}\n                      changeBookLog={this.changeBookLog}\n                      switch={this.switch}\n                      nickname={this.state.nickname}\n                    /> : ''}\n\n                  </div>\n                  <h1>{this.props.id}</h1>\n                  <div>\n                    {this.state.toggleProfile ?\n                      <Profile\n                        book={this.state.profileBook}\n                        switch={this.switch}\n                      /> :\n                      ''}\n                  </div>\n                  <div className={this.state.toggleMain ? '' : 'd-none'}>\n                    <AddBooks\n                      addBook={this.addBook}\n                      nickname={this.state.nickname}\n                    />\n                    <DisplayBooks\n                      bookshelf={this.state.bookshelf}\n                      removeBook={this.removeBook}\n                      switch={this.switch}\n\n                    />\n\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\r\nimport '../css/App.css';\r\nimport axios from 'axios';\r\nimport Header from './Header'\r\n\r\nclass StartScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            SEmail: '',\r\n            SPassword: '',\r\n            SNick: '',\r\n            LEmail: '',\r\n            LPassword: '',\r\n            LogedIn: false,\r\n            errors: {}\r\n        }\r\n        this.submitNew = this.submitNew.bind(this);\r\n        this.submitLogin = this.submitLogin.bind(this);\r\n    }\r\n\r\n    submitNew(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            errors: {}\r\n        })\r\n        let userData = {\r\n            nickname: this.state.SNick,\r\n            email: this.state.SEmail,\r\n            password: this.state.SPassword\r\n\r\n        }\r\n        axios.post('http://storytime-matt.herokuapp.com/home/signup', userData)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                if (res.data.errors) {\r\n                    this.setState({\r\n                        errors: res.data.errors\r\n                    })\r\n                    return\r\n                }\r\n                //console.log(\"success\")\r\n                //console.log(userFile._id)\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n        this.setState({\r\n            SEmail: '',\r\n            SPassword: '',\r\n            SNick: ''\r\n        })\r\n    }\r\n    submitLogin(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            errors: {}\r\n        })\r\n        let checkUser = {\r\n            email: this.state.LEmail,\r\n            password: this.state.LPassword\r\n        }\r\n\r\n        axios.post('http://storytime-matt.herokuapp.com/home/login', checkUser)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                if (res.data.errors) {\r\n                    this.setState({\r\n                        errors: res.data.errors\r\n                    })\r\n                    return\r\n                }\r\n                this.props.setId(res.data.token)\r\n            })\r\n\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n        this.setState({\r\n            LEmail: '',\r\n            LPassword: ''\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header LogedIn={this.state.LogedIn} />\r\n\r\n                <div className=\"container\">\r\n                    <br></br>\r\n                    <div className=\"login_line row\">\r\n\r\n                        <div className=\"offset-0 col-5\">\r\n                            <h2 className=\"text-center\">New User</h2>\r\n                            <form onSubmit={(e) => this.submitNew(e)}>\r\n                                <div className=\"row my-5\">\r\n                                    <label className=\"col-4 justify-self-right\">Email:</label>\r\n                                    <br></br>\r\n                                    <input\r\n                                        placeholder=\"...\"\r\n                                        className=\"col-6\"\r\n                                        value={this.state.SEmail}\r\n                                        onChange={e => {\r\n                                            this.setState({\r\n                                                SEmail: e.target.value\r\n                                            })\r\n                                        }}\r\n                                    ></input>\r\n                                </div>\r\n                                <div className=\"row my-5\">\r\n                                    <label className=\"col-4 justify-self-right\">Password:</label>\r\n                                    <br></br>\r\n                                    <input\r\n                                        placeholder=\"...\"\r\n                                        className=\"col-6\"\r\n                                        value={this.state.SPassword}\r\n                                        onChange={e => {\r\n                                            this.setState({\r\n                                                SPassword: e.target.value\r\n                                            })\r\n                                        }}\r\n                                    ></input>\r\n                                </div>\r\n                                <div className=\"row my-5\">\r\n                                    <label className=\"col-4 justify-self-right\">nickname:</label>\r\n                                    <input\r\n                                        placeholder=\"What should we call you?\"\r\n                                        className=\"col-6\"\r\n                                        value={this.state.SNick}\r\n                                        onChange={e => {\r\n                                            this.setState({\r\n                                                SNick: e.target.value\r\n                                            })\r\n                                        }}\r\n                                    ></input>\r\n                                </div>\r\n                                <div className=\"row justify-content-center\">\r\n                                    <button className=\"btn btn-dark\" type=\"submit\">\r\n                                        <span>Sign Up</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"offset-2 col-5\">\r\n                            <h2 className=\"\">Login</h2>\r\n                            <form onSubmit={this.submitLogin}>\r\n                                <div className=\"row my-5\">\r\n                                    <label className=\"col-4 justify-self-right\">Email:</label>\r\n                                    <br></br>\r\n                                    <input\r\n                                        placeholder=\"...\"\r\n                                        className=\"col-6\"\r\n                                        value={this.state.LEmail}\r\n                                        onChange={e => {\r\n                                            this.setState({\r\n                                                LEmail: e.target.value\r\n                                            })\r\n                                        }}\r\n                                    ></input>\r\n                                </div>\r\n                                <div className=\"row my-5\">\r\n                                    <label className=\"col-4 justify-self-right\">Password:</label>\r\n                                    <br></br>\r\n                                    <input\r\n                                        placeholder=\"...\"\r\n                                        className=\"col-6\"\r\n                                        value={this.state.LPassword}\r\n                                        onChange={e => {\r\n                                            this.setState({\r\n                                                LPassword: e.target.value\r\n                                            })\r\n                                        }}\r\n                                    ></input>\r\n                                </div>\r\n                                <div className=\"row justify-content-center\">\r\n                                    <button className=\"btn btn-dark\" type=\"submit\">\r\n                                        <span>Login</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"my-3\">\r\n                        <label>{this.state.errors.email ? this.state.errors.email : ''}</label>\r\n                    </div><div>\r\n                        <label>{this.state.errors.password ? this.state.errors.password : ''}</label>\r\n                    </div><div>\r\n                        <label>{this.state.errors.nickname ? this.state.errors.nickname : ''}</label>\r\n                    </div>\r\n                </div >\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default StartScreen;","import React, { Component } from 'react';\r\nimport '../css/App.css';\r\nimport Header from './Header'\r\nimport axios from 'axios'\r\nimport { FaTrash } from 'react-icons/fa'\r\nimport { FaHeart } from 'react-icons/fa';\r\nimport { without } from 'lodash'\r\n\r\nexport default class PublicPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nickname: '',\r\n            pageId: this.props.pageId || '',\r\n            LogedIn: false,\r\n            postLog: []\r\n        }\r\n        this.onLike = this.onLike.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.pageId === '') {\r\n            window.location = '/'\r\n        }\r\n        axios.get(`http://storytime-matt.herokuapp.com/home/${this.state.pageId}`)\r\n            .then(res => {\r\n                //console.log(res.data);\r\n                this.setState({\r\n                    nickname: res.data.nickname,\r\n                    LogedIn: true\r\n                })\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n        axios.get('http://storytime-matt.herokuapp.com/home/posts')\r\n            .then(res => {\r\n                this.setState({\r\n                    postLog: res.data.reverse()\r\n                })\r\n            })\r\n\r\n\r\n    }\r\n\r\n    removePost(post) {\r\n        console.log(post._id)\r\n        axios.post(`http://storytime-matt.herokuapp.com/home/posts/delete/${post._id}`)\r\n            .then(res => {\r\n                console.log(res)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            });\r\n\r\n        let templog = without(this.state.postLog, post);\r\n\r\n        this.setState({\r\n            postLog: templog\r\n        })\r\n    }\r\n    onLike(post) {\r\n        if (!post.likes.includes(this.state.nickname)) {\r\n            post.likes.push(this.state.nickname)\r\n        }\r\n        else {\r\n            const index = post.likes.indexOf(this.state.nickname);\r\n            post.likes.splice(index, 1)\r\n        }\r\n        console.log(post._id)\r\n        axios.put(`http://storytime-matt.herokuapp.com/home/posts/update/likes/${post._id}`, post.likes)\r\n            .then(res => {\r\n                console.log(res)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            });\r\n        this.forceUpdate()\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Header\r\n                    LogedIn={this.state.LogedIn}\r\n                    nickname={this.state.nickname}\r\n                    Logout={this.props.Logout}\r\n                    pageName={\"Public\"}\r\n                    newNavPage={this.props.newNavPage}\r\n                />\r\n\r\n                <main className=\"bg-dark base\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <h5 className=\"text-light my-3\">Look around to see others thoughts about what they are reading but be weary of spoilers!</h5>\r\n                                {this.state.postLog.map((post, key) => {\r\n\r\n                                    return <div className=\"row\" key={key}>\r\n                                        <div className=\"col-10 offset-1\">\r\n                                            <div className=\"card bg-dark my-3\">\r\n                                                <div className=\"card-header text-light\">\r\n                                                    <label className=\"float-left\"><b>{post.nickname}</b> posted after reading <b>{post.title}</b> by <b>{post.author}</b></label>\r\n                                                    <h6 className=\"float-right\">{post.dateOfPost}</h6>\r\n                                                </div>\r\n                                                <div style={{ background: `rgb(${post.rgb.r},${post.rgb.g},${post.rgb.b})` }} className=\"card-body\">\r\n                                                    <div className=\"row\">\r\n                                                        <label className=\"float-left text-dark\">{post.note}</label>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <div className=\"row mt-5\">\r\n                                                            <div className=\"col-3\">\r\n                                                                <label className=\"\">Rating: <b>{post.rating}/10</b></label>\r\n                                                            </div>\r\n                                                            <div className=\"vl\"></div>\r\n                                                            <div className=\"col-3\">\r\n                                                                <label>From page <b>{post.start}</b></label>\r\n                                                            </div>\r\n                                                            <div className=\"vl\"></div>\r\n\r\n                                                            <div className=\"col-3\">\r\n                                                                <label>To page <b>{post.end}</b></label>\r\n                                                            </div>\r\n                                                            <div className=\"vl\"></div>\r\n\r\n                                                            <div className=\"col-3\">\r\n                                                                <label>Likes: <b>{post.likes.length}</b></label>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-1\">\r\n                                            <button className={'btn text-white my-4 ' +\r\n                                                (post.likes.includes(this.state.nickname) ? 'bg-dark' : 'buttonsecondary')}\r\n                                                onClick={() => {\r\n                                                    this.onLike(post)\r\n                                                }}\r\n                                            ><FaHeart /></button>\r\n                                            {post.nickname === this.state.nickname ? <button className=\"btn btn-danger mt-3 mb-2\"\r\n                                                onClick={() => this.removePost(post)}\r\n                                            ><FaTrash /></button> : ''}\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Home from './Home';\r\nimport StartScreen from './StartScreen'\r\nimport PublicPage from './PublicPage'\r\nimport { navigate, Router } from '@reach/router';\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      pageId: ''\r\n    }\r\n    this.setId = this.setId.bind(this);\r\n  }\r\n\r\n  setId(id) {\r\n    this.setState({\r\n      pageId: id\r\n    })\r\n    navigate('/home')\r\n  }\r\n\r\n  Logout() {\r\n    navigate('/')\r\n  }\r\n\r\n  newNavPage(pageName) {\r\n    if (pageName === 'Home') {\r\n      navigate('/home')\r\n    } else if (pageName === 'Public') {\r\n      navigate('/public')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"App\">\r\n        <Router>\r\n          <StartScreen path=\"/\" className=\"\"\r\n            setId={this.setId} />\r\n          <Home path=\"/home\" className=\"\"\r\n            pageId={this.state.pageId}\r\n            Logout={this.Logout}\r\n            newNavPage={this.newNavPage}\r\n          />\r\n          <PublicPage path=\"/public\"\r\n            pageId={this.state.pageId}\r\n            Logout={this.Logout}\r\n            newNavPage={this.newNavPage}\r\n          />\r\n        </Router >\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './css/index.css';\nimport App from './components/App';\n//import * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery.js';\nimport 'popper.js/dist/umd/popper.js';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}